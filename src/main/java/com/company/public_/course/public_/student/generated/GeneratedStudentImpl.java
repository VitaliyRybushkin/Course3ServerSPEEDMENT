package com.company.public_.course.public_.student.generated;

import com.company.public_.course.public_.student.Student;
import com.speedment.common.annotation.GeneratedCode;

import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.company.public_.course.public_.student.Student}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedStudentImpl implements Student {
    
    private int id;
    private String login;
    private String password;
    private String info;
    private String fullname;
    
    protected GeneratedStudentImpl() {}
    
    @Override
    public int getId() {
        return id;
    }
    
    @Override
    public String getLogin() {
        return login;
    }
    
    @Override
    public String getPassword() {
        return password;
    }
    
    @Override
    public String getInfo() {
        return info;
    }
    
    @Override
    public String getFullname() {
        return fullname;
    }
    
    @Override
    public Student setId(int id) {
        this.id = id;
        return this;
    }
    
    @Override
    public Student setLogin(String login) {
        this.login = login;
        return this;
    }
    
    @Override
    public Student setPassword(String password) {
        this.password = password;
        return this;
    }
    
    @Override
    public Student setInfo(String info) {
        this.info = info;
        return this;
    }
    
    @Override
    public Student setFullname(String fullname) {
        this.fullname = fullname;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "       + Objects.toString(getId()));
        sj.add("login = "    + Objects.toString(getLogin()));
        sj.add("password = " + Objects.toString(getPassword()));
        sj.add("info = "     + Objects.toString(getInfo()));
        sj.add("fullname = " + Objects.toString(getFullname()));
        return "StudentImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Student)) { return false; }
        final Student thatStudent = (Student)that;
        if (this.getId() != thatStudent.getId()) { return false; }
        if (!Objects.equals(this.getLogin(), thatStudent.getLogin())) { return false; }
        if (!Objects.equals(this.getPassword(), thatStudent.getPassword())) { return false; }
        if (!Objects.equals(this.getInfo(), thatStudent.getInfo())) { return false; }
        if (!Objects.equals(this.getFullname(), thatStudent.getFullname())) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(getLogin());
        hash = 31 * hash + Objects.hashCode(getPassword());
        hash = 31 * hash + Objects.hashCode(getInfo());
        hash = 31 * hash + Objects.hashCode(getFullname());
        return hash;
    }
}