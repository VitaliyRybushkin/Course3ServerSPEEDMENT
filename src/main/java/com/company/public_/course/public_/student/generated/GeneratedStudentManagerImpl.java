package com.company.public_.course.public_.student.generated;

import com.company.public_.course.public_.student.Student;
import com.company.public_.course.public_.student.StudentImpl;
import com.company.public_.course.public_.student.StudentManager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;

import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.company.public_.course.public_.student.Student} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedStudentManagerImpl 
extends AbstractManager<Student> 
implements GeneratedStudentManager {
    
    private final TableIdentifier<Student> tableIdentifier;
    
    protected GeneratedStudentManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("Course", "public", "student");
    }
    
    @Override
    public Student create() {
        return new StudentImpl();
    }
    
    @Override
    public TableIdentifier<Student> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<Student>> fields() {
        return StudentManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<Student>> primaryKeyFields() {
        return Stream.of(
            Student.ID
        );
    }
}