package com.company.public_.course.public_.student.generated;

import com.company.public_.course.public_.student.Student;
import com.company.public_.course.public_.student.StudentImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

import java.sql.ResultSet;
import java.sql.SQLException;

import static com.speedment.common.injector.State.RESOLVED;

/**
 * The generated Sql Adapter for a {@link
 * com.company.public_.course.public_.student.Student} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedStudentSqlAdapter implements SqlAdapter<Student> {
    
    private final TableIdentifier<Student> tableIdentifier;
    
    protected GeneratedStudentSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("Course", "public", "student");
    }
    
    protected Student apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
            .setId(       resultSet.getInt(1 + offset))
            .setLogin(    resultSet.getString(2 + offset))
            .setPassword( resultSet.getString(3 + offset))
            .setInfo(     resultSet.getString(4 + offset))
            .setFullname( resultSet.getString(5 + offset))
            ;
    }
    
    protected StudentImpl createEntity() {
        return new StudentImpl();
    }
    
    @Override
    public TableIdentifier<Student> identifier() {
        return tableIdentifier;
    }
    
    @Override
    public SqlFunction<ResultSet, Student> entityMapper() {
        return entityMapper(0);
    }
    
    @Override
    public SqlFunction<ResultSet, Student> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}