package com.company.public_.course.public_.task_array.generated;

import com.company.public_.course.public_.task_array.TaskArray;
import com.company.public_.course.public_.task_array.TaskArrayImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

import java.sql.ResultSet;
import java.sql.SQLException;

import static com.speedment.common.injector.State.RESOLVED;

/**
 * The generated Sql Adapter for a {@link
 * com.company.public_.course.public_.task_array.TaskArray} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedTaskArraySqlAdapter implements SqlAdapter<TaskArray> {
    
    private final TableIdentifier<TaskArray> tableIdentifier;
    
    protected GeneratedTaskArraySqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("Course", "public", "task_array");
    }
    
    protected TaskArray apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
            .setId(        resultSet.getInt(1 + offset))
            .setVariantId( resultSet.getInt(2 + offset))
            .setTaskId(    resultSet.getInt(3 + offset))
            ;
    }
    
    protected TaskArrayImpl createEntity() {
        return new TaskArrayImpl();
    }
    
    @Override
    public TableIdentifier<TaskArray> identifier() {
        return tableIdentifier;
    }
    
    @Override
    public SqlFunction<ResultSet, TaskArray> entityMapper() {
        return entityMapper(0);
    }
    
    @Override
    public SqlFunction<ResultSet, TaskArray> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}